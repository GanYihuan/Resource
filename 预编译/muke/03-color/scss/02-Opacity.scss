@charset "UTF-8";

//在 CSS 中除了可以使用 rgba、hsla 和 transform 来控制颜色透明度之外，还可以使用 opacity 来控制，
//只不过前两者只是针对颜色上的透明通道做处理，而后者是控制整个元素的透明度。

//alpha($color) /opacity($color)：获取颜色透明度值；
//rgba($color, $alpha)：改变颜色的透明度值；
//opacify($color, $amount) / fade-in($color, $amount)：使颜色更不透明；
//transparentize($color, $amount) / fade-out($color, $amount)：使颜色更加透明。

//这个函数的主要功能是用来获取一个颜色的透明度值。如果颜色没有特别指定透明度，那么这两个函数得到的值都会是 1：
//>> alpha(red)
//1
//>> alpha(rgba(red,.8))
//0.8

//>> rgba(red,.5)
//rgba(255, 0, 0, 0.5)
//>> rgba(#dedede,.5)
//rgba(222, 222, 222, 0.5)
//>> rgba(rgba(33,45,123,.2),.5)
//rgba(33, 45, 123, 0.5)

//第一个参数是原始颜色，第二个参数是你需要增加的透明度值，
//其取值范围主要是在 0~1 之间。当透明度值增加到大于 1 时，会以 1 计算，表示颜色不具有任何透明度。
//>> opacify(rgba(22,34,235,.6),.2)
//rgba(22, 34, 235, 0.8)
//>> opacify(rgba(22,34,235,.6),.5)
//#1622eb

//transparentize() 和 fade-out() 函数所起作用刚好与 opacify() 和 fade-in() 函数相反，
//让颜色更加的透明。这两个函数会让透明值做减法运算，当计算出来的结果小于 0 时会以 0 计算，表示全透明。
//>> transparentize(red,.5)
//rgba(255, 0, 0, 0.5)
//>> transparentize(#fde,.9)
//rgba(255, 221, 238, 0.1)
//>> transparentize(rgba(98,233,124,.3),.11)
//rgba(98, 233, 124, 0.19)
//>> transparentize(rgba(98,233,124,.3),.51)
//rgba(98, 233, 124, 0)

//>> fade-out(red,.9)
//rgba(255, 0, 0, 0.1)
//>> fade-out(hsla(98,6%,23%,.5),.1)
//rgba(58, 62, 55, 0.4)
//>> fade-out(hsla(98,6%,23%,.5),.6)
//rgba(58, 62, 55, 0)
